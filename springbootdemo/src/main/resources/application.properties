server.port=9090
spring.datasource.druid.master.url=jdbc:mysql://192.168.78.120:3306/commodity?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
spring.datasource.druid.master.username=root
spring.datasource.druid.master.password=Root1234.
spring.datasource.druid.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.master.poolPreparedStatements=true
spring.datasource.druid.master.default-auto-commit=true
#spring.datasource.druid.master.filter.slf4j.enabled=true
#spring.datasource.druid.master.filter.slf4j.statement-create-after-log-enabled=false
#spring.datasource.druid.master.filter.slf4j.statement-log-enabled=false
spring.datasource.druid.master.filter.slf4j.statement-executable-sql-log-enable=true
#spring.datasource.druid.master.filter.slf4j.statement-log-error-enabled=true
#spring.datasource.druid.master.filter.slf4j.result-set-log-enabled=false

spring.datasource.druid.slave1.url=jdbc:mysql://192.168.78.121:3306/commodity?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
spring.datasource.druid.slave1.username=root
spring.datasource.druid.slave1.password=Root1234.
spring.datasource.druid.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.slave1.poolPreparedStatements=true
spring.datasource.druid.slave1.default-auto-commit=true
#spring.datasource.druid.slave1.filter.slf4j.enabled=true
#spring.datasource.druid.slave1.filter.slf4j.statement-create-after-log-enabled=false
#spring.datasource.druid.slave1.filter.slf4j.statement-log-enabled=false
#spring.datasource.druid.slave1.filter.slf4j.statement-executable-sql-log-enable=true
#spring.datasource.druid.slave1.filter.slf4j.statement-log-error-enabled=true
#spring.datasource.druid.slave1.filter.slf4j.result-set-log-enabled=false

mybatis.mapper-locations=classpath:/mapper/**Mapper.xml
mybatis.type-aliases-package=com.example.springbootdemo.model
mapper.mappers=com.example.springbootdemo.mapper.MyBatisBaseDao
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
logging.level.com.example.springbootdemo.mapper=debug

spring.redis.host=localhost
spring.redis.port=6379
#spring.redis.password=
spring.redis.database=1

my.name=way
#spring.redis.timeout=30000
#spring.redis.lettuce.pool.max-wait=30000



#kafka，更多配置：org.springframework.boot.autoconfigure.kafka.KafkaProperties
#指定kafka 代理地址，可以多个
#spring.kafka.bootstrap-servers=192.168.78.60:9092
##指定默认topic id
#spring.kafka.template.default-topic=topic1
##指定listener 容器中的线程数，用于提高并发量
#spring.kafka.listener.concurrency=3
##每次批量发送消息的数量
#spring.kafka.producer.batch-size=1000
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
##指定默认消费者group id
#spring.kafka.consumer.group-id=myGroup1
##若设置为earliest，那么会从头开始读partition
#spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
